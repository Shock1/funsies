@import url('https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap');
@import url('https://unpkg.com/normalize.css') layer(normalize);
@import url("https://fonts.googleapis.com/css?family=Alata&display=swap");

:root {
  --speed: 0.85;
  --primary: #fff;
  --size: 30;
  --ease: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
@layer normalize, base, demo, stick, effect, srollbar, debug;

@layer debug {
  [data-debug='true'] li {
    outline: 0.05em dashed currentColor;
  }
  [data-debug='true'] :is(h2, li:last-of-type) {
    outline: 0.05em dashed canvasText;
  }
}

@layer scrollbar {
  @property --hue {
    initial-value: 0;
    syntax: '<number>';
    inherits: false;
  }
  @property --chroma {
    initial-value: 0;
    syntax: '<number>';
    inherits: true;
  }

  [data-sync-scrollbar='true'] {
    scrollbar-color: oklch(var(--lightness) var(--chroma) var(--hue)) #0000;
  }
  @supports (animation-timeline: scroll()) and (animation-range: 0% 100%) {
    [data-sync-scrollbar='true'][data-animate='true'] {
      timeline-scope: --list;
      scrollbar-color: oklch(var(--lightness) var(--chroma, 0) var(--hue)) #0000;
      animation-name: change, chroma-on, chroma-off;
      animation-fill-mode: both;
      animation-timing-function: linear;
      /* animation-timeline: scroll(root); */
      animation-range: entry 50% exit 50%, entry 40% entry 50%,
        exit 30% exit 40%;
      animation-timeline: --list;
      ul {
        view-timeline: --list;
      }
    }
  }

  @keyframes change {
    to {
      --hue: var(--end);
    }
  }
  @keyframes chroma-on {
    to {
      --chroma: 0.3;
    }
  }
  @keyframes chroma-off {
    to {
      --chroma: 0;
    }
  }
}

@layer effect {
  :root {
    --start: 0;
    --end: 360;
    --lightness: 65%;
    --base-chroma: 0.3;
  }
  [data-theme='dark'] {
    --lightness: 75%;
  }
  [data-theme='light'] {
    --lightness: 65%;
  }
  @media (prefers-color-scheme: dark) {
    :root {
      --lightness: 75%;
    }
  }
  ul {
    --step: calc((var(--end) - var(--start)) / (var(--count) - 1));
  }
  li:not(:last-of-type) {
    color: oklch(
      var(--lightness) var(--base-chroma)
        calc(var(--start) + (var(--step) * var(--i)))
    );
  }

  @supports (animation-timeline: scroll()) and (animation-range: 0% 100%) {
    [data-animate='true'] {
      li {
        opacity: 0.2;
        animation-name: brighten;

        &:first-of-type {
          --start-opacity: 1;
        }
        &:last-of-type {
          --brightness: 1;
          --end-opacity: 1;
        }
        animation-fill-mode: both;
        animation-timing-function: linear;
        animation-range: cover calc(50% - 1lh) calc(50% + 1lh);
        animation-timeline: view();
      }
    }

    @keyframes brighten {
      0% {
        opacity: var(--start-opacity, 0.2);
      }
      50% {
        opacity: 1;
        filter: brightness(var(--brightness, 1.2));
      }
      100% {
        opacity: var(--end-opacity, 0.2);
      }
    }
  }
}

@layer stick {
  section:first-of-type {
    --font-level: 6;
    display: flex;
    line-height: 1.25;
    width: 100%;
    padding-left: 5rem;
  }
  section.valentine {
    min-height: 100vh;
    display: flex;
    place-items: center;
    width: 100%;
    justify-content: center;

    h2 {
      --font-level: 6;
    }
  }
  section.love-counter {
    min-height: 100vh;
    display: flex;
    place-items: center;
    width: 100%;
    justify-content: center;

    h2 {
      --font-level: 6;
    }
  }
  main {
    width: 100%;
  }
  section:first-of-type h2 {
    position: sticky;
    top: calc(50% - 0.5lh);
    font-size: inherit;
    margin: 0;
    display: inline-block;
    height: fit-content;
    font-weight: 600;
  }
  ul {
    font-weight: 600;
    padding-inline: 0;
    margin: 0;
    list-style-type: none;
  }

  [data-snap='true'] {
    scroll-snap-type: y proximity;

    li {
      scroll-snap-align: center;
    }
  }

  h2,
  li:last-of-type {
    background: linear-gradient(
      canvasText 50%,
      color-mix(in oklch, canvas, canvasText 25%)
    );
    background-clip: text;
    color: #0000;
  }
}

@layer demo {
  header {
    min-height: 100vh;
    display: flex;
    place-items: center;
    width: 100%;
    padding-inline: 5rem;
  }

  footer {
    padding-block: 2rem;
    opacity: 0.5;
  }

  h1 {
    --font-size-min: 24;
    --font-level: 8;
    text-wrap: pretty;
    line-height: 0.8;
    margin: 0;
    background: linear-gradient(
      canvasText 60%,
      color-mix(in oklch, canvas, canvasText)
    );
    background-clip: text;
    color: #0000;
  }
}

@layer base {
  :root {
    --font-size-min: 14;
    --font-size-max: 20;
    --font-ratio-min: 1.1;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
/*    color-scheme: light dark;*/
    color-scheme: dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    display: grid;
    place-items: center;
    background: light-dark(white, black);
    min-height: 100vh;
    font-family: 'Geist', 'SF Pro Text', 'SF Pro Icons', 'AOS Icons',
      'Helvetica Neue', Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in hsl, canvasText, transparent 70%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        50% 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
        var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}

div.tp-dfwv {
  position: fixed;
}

/* Buttons div */
.buttons-div{
  min-height: 20vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* place-items: baseline; */
    width: 100%;
    /* justify-content: center; */
}

/* Center the test text */
.test-text {
  font-family: 'Geist', 'Segoe UI Emoji', 'Apple Color Emoji', 'Noto Color Emoji', sans-serif;
  color: white; /* Ensure text color contrasts with the background */
  background: none; /* Remove background-clip effects */
  font-size: 1.1rem; /* Adjust font size as needed */
  font-weight: bold;
  margin-bottom: 1rem; /* Space between "test" and buttons */
  text-align: center;
  display: none;
}


/* buttons css */
button {
  position: relative;
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
  outline-offset: 4px;
  transition: filter 250ms;
  user-select: none;
  touch-action: manipulation;
  font-weight: 700;
}

/* Adjust for large screens */
@media (min-width: 900px) {
  button {
    min-width: 200px !important;
  }
  button .front {
    min-height: 85px !important;
    font-size: 2.1rem !important;
  }
  .test-text {
    font-size: 2.1rem !important;
  }
}

/* Adjust for small screens */
@media (max-width: 600px) { /* You can adjust the max-width as needed for your definition of small screens */
    section:last-of-type {
      min-height: 30vh; /* Set to 80vh for small screens */
    }
  }

.shadow {
 position: absolute;
 top: 0;
 left: 0;
 width: 100%;
 height: 100%;
 border-radius: 12px;
 background: hsl(0deg 0% 0% / 0.25);
 will-change: transform;
 transform: translateY(2px);
 transition: transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

button .front{
  align-content: center;
}

/*No button */
.no-button .edge {
 position: absolute;
 top: 0;
 left: 0;
 width: 100%;
 height: 100%;
 border-radius: 12px;
 background: linear-gradient(
    to left,
    hsl(340deg 100% 16%) 0%,
    hsl(340deg 100% 32%) 8%,
    hsl(340deg 100% 32%) 92%,
    hsl(340deg 100% 16%) 100%
  );
}

.no-button .front {
 display: block;
 position: relative;
 padding: 12px 27px;
 border-radius: 12px;
/* font-size: 1.1rem;*/
 color: white;
/* background: hsl(345deg 100% 95.51%);*/
 background: hsl(0deg 0% 0.79%);
 will-change: transform;
 transform: translateY(-4px);
 transition: transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

/*Yes button */
.yes-button .edge {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: linear-gradient(
  to left,
  hsl(140deg 100% 12%) 0%,
  hsl(140deg 100% 28%) 8%,
  hsl(140deg 100% 28%) 92%,
  hsl(140deg 100% 12%) 100%
  );
}

.yes-button .front {
  display: block;
  position: relative;
  padding: 12px 27px;
  border-radius: 12px;
  color: white;
/*  background: hsl(145deg 27.67% 88.03%);*/
  background: hsl(0deg 0% 0.79%);
  will-change: transform;
  transform: translateY(-4px);
  transition: transform 600ms cubic-bezier(.3, .7, .4, 1);
}


button:hover {
 filter: brightness(110%);
}

button:hover .front {
 transform: translateY(-6px);
 transition: transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

button:active .front {
 transform: translateY(-2px);
 transition: transform 34ms;
}

button:hover .shadow {
 transform: translateY(4px);
 transition: transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

button:active .shadow {
 transform: translateY(1px);
 transition: transform 34ms;
}

button:focus:not(:focus-visible) {
 outline: none;
}


/* Menu */

.menu__toggle {
  opacity: 0;
  position: absolute;
}
.menu__toggle:checked ~ .menu__content .menu__item {
  --active-x: var(--x);
  --active-y: var(--y);
  --scale: 1;
}
.menu__toggle:checked ~ .menu__toggle-label:not(.menu__toggle-label--closer) {
  --clip: circle(1000% at 0% 0%);
  height: 100vh;
  width: 100vw;
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
}
.menu__toggle:checked ~ .menu__toggle-label .menu__icon:nth-of-type(1) {
  --scale: 0;
}
.menu__toggle:checked ~ .menu__toggle-label .menu__icon:nth-of-type(2) {
  --scale: 1;
}
.menu__toggle-label {
  cursor: pointer;
  height: calc(var(--size, 20) * 0.5vmin);
  width: calc(var(--size, 20) * 0.5vmin);
  display: block;
  --clip: circle(100% at 0% 0%);
  -webkit-clip-path: var(--clip);
  clip-path: var(--clip);
  position: absolute;
  top: 0;
  left: 0;
  transition: backdrop-filter calc(var(--speed, 1) * 1s) var(--ease),
    clip-path 0s, -webkit-clip-path 0s;
}
.menu__toggle-label--closer {
  z-index: 3;
  --scale: 0;
}
.menu__icon {
  --scale: 1;
  height: calc(var(--size, 20) * 0.25vmin);
  width: calc(var(--size, 20) * 0.25vmin);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-70%, -70%) scale(var(--scale, 1));
  fill: var(--primary);
  transition: all calc(var(--speed, 1) * 1s) var(--ease);
}
.menu__icon:nth-of-type(2) {
  --scale: 0;
}
.menu__content {
  background: hsl(var(--hue, 0), 50%, 50%);
  margin: 0;
  display: block;
  list-style-type: none;
  z-index: -1;
  filter: url("#goo");
  position: absolute;
  top: 0;
  height: 0;
  width: 0;
  left: 0;
  z-index: 2;
}
.menu__content:after {
  background: hsl(0deg 0% 0%);
  content: "";
  border-radius: 50%;
  transform: translate(-50%, -50%);
  position: absolute;
  height: calc(var(--size, 20) * 1vmin);
  width: calc(var(--size, 20) * 1vmin);
  top: 0;
  left: 0;
}
.menu__item {
  background: hsl(0deg 0% 92.13%);
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  list-style-type: none;
  font-size: 1rem;
  height: calc(var(--size, 20) * 1vmin);
  left: calc(var(--active-x, 0) * 1vw);
  overflow: hidden;
  place-items: center;
  position: absolute;
  text-align: center;
  top: calc(var(--active-y, 0) * 1vh);
  transform: translate(-50%, -50%) scale(var(--scale, 0.75));
  transition: all calc(var(--speed, 1) * 1s) calc(var(--delay, 0) * 1s)
    var(--ease);
  width: calc(var(--size, 20) * 1vmin);
}
@media (min-width: 768px) {
  .menu__item {
    font-size: 3rem;
  }
}
.menu__item:nth-of-type(1) {
  --delay: 0.1;
  --x: 35;
  --y: 35;
}
.menu__item:nth-of-type(2) {
  --delay: 0.2;
  --x: 65;
  --y: 35;
}
.menu__item:nth-of-type(3) {
  --delay: 0.3;
  --x: 35;
  --y: 65;
}
.menu__item:nth-of-type(4) {
  --delay: 0.4;
  --x: 65;
  --y: 65;
}
.menu__link {
  align-items: center;
  color: #000000;
  cursor: pointer;
  text-decoration: none;
  font-weight: bold;
  text-align: center;
  display: flex;
  justify-content: center;
  height: 100%;
  width: 100%;
}
.menu__link:hover {
  text-decoration: underline;
}

.menu__item{
  opacity: 0.8463 !important;
}